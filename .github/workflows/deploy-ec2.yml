name: Deploy with docker 

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-disabled: true

      - name: Build without tests
        run: |
            cd lms
            ./gradlew clean build -x test
      
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker image build
        run: |
          cd lms
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/goget-customer:${{ github.sha }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/goget-customer:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/goget-customer:latest

      - name: docker Hub push
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/goget-customer:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/goget-customer:latest

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build-docker-image
    environment: dev
    steps:
      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            rm -rf learning-management-system
            git clone git@github.com:GoGetCustomer/learning-management-system.git
            cd learning-management-system/lms
            ./gradlew clean build -x test
            cd build/libs/
            nohup java -jar -Dspring.profiles.active=prod lms-0.0.1-SNAPSHOT.jar &